/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.ControladorArbitro;
import Controlador.ControladorJugador;
import Modelo.Arbitro;
import Modelo.Jugador;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author petu
 */
public class Dashboard extends javax.swing.JFrame {
   private ControladorJugador controladorJugador;
   private ControladorArbitro controladorArbitro;
   private File jugadorArchivo;
   private TableRowSorter sorter;
   private DefaultComboBoxModel<String> modeloEquipos;//Modelo del combo box de equipos de modificar jugador
   private boolean seActualizaComboBox= false;
   
    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        this.setExtendedState(this.MAXIMIZED_BOTH);
        spinnerTarAmarModifJugador.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));
        spinnerGolesModifJugador.setModel(new javax.swing.SpinnerNumberModel(0, 0, 9999, 1));

    }
        public Dashboard(ControladorJugador m,ControladorArbitro p ,File a) {
             initComponents();
             this.setExtendedState(this.MAXIMIZED_BOTH);
             this.controladorJugador=m;
             this.controladorArbitro=p;
             this.jugadorArchivo=a;
       this.panelIngresoJugador.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMenu1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        btnJugadores2 = new javax.swing.JButton();
        btnArbitros1 = new javax.swing.JButton();
        botonVistaEquipos1 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        btnJugadores3 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        btnArbitros2 = new javax.swing.JButton();
        Background = new javax.swing.JPanel();
        panelMenu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnJugadores = new javax.swing.JButton();
        btnArbitros = new javax.swing.JButton();
        botonSalirPrincipal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnJugadores1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnArbitros3 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        botonVistaEquipos2 = new javax.swing.JButton();
        btnMenuEliminarJugador = new javax.swing.JButton();
        btnMenuModificarJugador = new javax.swing.JButton();
        btnMenuEliminarArbitro = new javax.swing.JButton();
        btnMenuModificarArbitro = new javax.swing.JButton();
        botonVistaEquipos3 = new javax.swing.JButton();
        botonVistaEquipos4 = new javax.swing.JButton();
        botonVistaEquipos5 = new javax.swing.JButton();
        botonVistaEquipos6 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        PanelInformacion = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        panelIngresoJugador = new javax.swing.JPanel();
        PanelIngreso = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtCantidadAmarillas = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        botonCargarJugador = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        txtNacionalidad = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtAnio = new javax.swing.JTextField();
        txtMes = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        MensajeErrorNombre = new javax.swing.JLabel();
        MensajeErrorApellido = new javax.swing.JLabel();
        MensajeErrorNacionalidad = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        BoxPosiciones = new javax.swing.JComboBox<>();
        BoxEquipo = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtDia = new javax.swing.JTextField();
        txtCantidadRojas = new javax.swing.JTextField();
        txtCantidadGoles = new javax.swing.JTextField();
        MensajeErrorFecha = new javax.swing.JLabel();
        MensajeErrorGoles = new javax.swing.JLabel();
        MensajeErrorAmarillas = new javax.swing.JLabel();
        MensajeErrorRojas = new javax.swing.JLabel();
        panelIngresoArbitro = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        txtNombre1 = new javax.swing.JTextField();
        txtDiaA = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        txtTarjetasTotales = new javax.swing.JTextField();
        botonCargarArbitro = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel40 = new javax.swing.JLabel();
        BoxInternacional = new javax.swing.JComboBox<>();
        txtNacionalidad1 = new javax.swing.JTextField();
        txtApellido1 = new javax.swing.JTextField();
        txtAnioA = new javax.swing.JTextField();
        txtMesA = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        MensajeErrorNombreA = new javax.swing.JLabel();
        MensajeErrorApellidoA = new javax.swing.JLabel();
        MensajeErrorFechaA = new javax.swing.JLabel();
        MensajeErrorNacionalidadA = new javax.swing.JLabel();
        MensajeErrorTarTotales = new javax.swing.JLabel();
        canvas1 = new java.awt.Canvas();
        MostrarJugadores = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaJugadores = new javax.swing.JTable();
        MostrarArbitro = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaArbitros = new javax.swing.JTable();
        EliminarJugador = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEliminarJugador = new javax.swing.JTable();
        combEquiposElimJugador = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        btnEliminarJugador = new javax.swing.JButton();
        EliminarArbitro = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jSeparator14 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaEliminarArbitro1 = new javax.swing.JTable();
        btnEliminarArbitro2 = new javax.swing.JButton();
        ModificarJugador = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JSeparator();
        cmboxEquiposModificar = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        cmBoxNombreModificarJugador = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        txtApellidoModificarJugador = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtBornModifJugador = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        cmBoxPosicionModifJugadores = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        spinnerTarAmarModifJugador = new javax.swing.JSpinner();
        jLabel31 = new javax.swing.JLabel();
        txtTarRojasModifJugador = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        spinnerGolesModifJugador = new javax.swing.JSpinner();
        jLabel44 = new javax.swing.JLabel();
        btnCargrModifJugadores = new javax.swing.JButton();
        ModificarArbitro = new javax.swing.JPanel();
        background = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaEliminarArbitro = new javax.swing.JTable();
        canJugadoresPEquipo = new javax.swing.JPanel();

        panelMenu1.setBackground(new java.awt.Color(255, 255, 255));
        panelMenu1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));

        jLabel18.setBackground(new java.awt.Color(204, 255, 255));
        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Bienvenidos");

        btnJugadores2.setBackground(new java.awt.Color(204, 255, 255));
        btnJugadores2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnJugadores2.setForeground(new java.awt.Color(51, 51, 51));
        btnJugadores2.setText("Mostrar Jugadores");
        btnJugadores2.setBorder(null);
        btnJugadores2.setBorderPainted(false);
        btnJugadores2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugadores2ActionPerformed(evt);
            }
        });

        btnArbitros1.setBackground(new java.awt.Color(204, 255, 255));
        btnArbitros1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnArbitros1.setForeground(new java.awt.Color(51, 51, 51));
        btnArbitros1.setText("Mostrar Arbitros");
        btnArbitros1.setBorder(null);
        btnArbitros1.setBorderPainted(false);
        btnArbitros1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArbitros1ActionPerformed(evt);
            }
        });

        botonVistaEquipos1.setBackground(new java.awt.Color(204, 255, 255));
        botonVistaEquipos1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonVistaEquipos1.setForeground(new java.awt.Color(51, 51, 51));
        botonVistaEquipos1.setText("Equipos");
        botonVistaEquipos1.setBorder(null);
        botonVistaEquipos1.setBorderPainted(false);
        botonVistaEquipos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVistaEquipos1ActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 51));
        jLabel19.setText("Arbitro");

        btnJugadores3.setBackground(new java.awt.Color(204, 255, 255));
        btnJugadores3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnJugadores3.setForeground(new java.awt.Color(51, 51, 51));
        btnJugadores3.setText("Cargar Jugador");
        btnJugadores3.setBorder(null);
        btnJugadores3.setBorderPainted(false);
        btnJugadores3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugadores3ActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setText("Jugador");

        btnArbitros2.setBackground(new java.awt.Color(204, 255, 255));
        btnArbitros2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnArbitros2.setForeground(new java.awt.Color(51, 51, 51));
        btnArbitros2.setText("Cargar Arbitro");
        btnArbitros2.setBorder(null);
        btnArbitros2.setBorderPainted(false);
        btnArbitros2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArbitros2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMenu1Layout = new javax.swing.GroupLayout(panelMenu1);
        panelMenu1.setLayout(panelMenu1Layout);
        panelMenu1Layout.setHorizontalGroup(
            panelMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(botonVistaEquipos1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelMenu1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenu1Layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE))
                    .addComponent(btnJugadores2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnArbitros1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelMenu1Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator5))
                .addContainerGap())
            .addGroup(panelMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelMenu1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnJugadores3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(panelMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelMenu1Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(346, Short.MAX_VALUE)))
            .addGroup(panelMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelMenu1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnArbitros2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelMenu1Layout.setVerticalGroup(
            panelMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenu1Layout.createSequentialGroup()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133)
                .addComponent(btnJugadores2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addComponent(btnArbitros1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonVistaEquipos1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
            .addGroup(panelMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelMenu1Layout.createSequentialGroup()
                    .addGap(167, 167, 167)
                    .addComponent(btnJugadores3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(449, Short.MAX_VALUE)))
            .addGroup(panelMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelMenu1Layout.createSequentialGroup()
                    .addGap(117, 117, 117)
                    .addComponent(jLabel20)
                    .addContainerGap(515, Short.MAX_VALUE)))
            .addGroup(panelMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenu1Layout.createSequentialGroup()
                    .addContainerGap(373, Short.MAX_VALUE)
                    .addComponent(btnArbitros2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(229, 229, 229)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1150, 700));

        Background.setBackground(new java.awt.Color(225, 223, 223));
        Background.setForeground(new java.awt.Color(255, 255, 255));

        panelMenu.setBackground(new java.awt.Color(213, 212, 212));
        panelMenu.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));

        jLabel1.setBackground(new java.awt.Color(204, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Bienvenidos");

        btnJugadores.setBackground(new java.awt.Color(204, 255, 255));
        btnJugadores.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnJugadores.setForeground(new java.awt.Color(51, 51, 51));
        btnJugadores.setText("Mostrar Jugadores");
        btnJugadores.setBorder(null);
        btnJugadores.setBorderPainted(false);
        btnJugadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugadoresActionPerformed(evt);
            }
        });

        btnArbitros.setBackground(new java.awt.Color(204, 255, 255));
        btnArbitros.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnArbitros.setForeground(new java.awt.Color(51, 51, 51));
        btnArbitros.setText("Cargar Arbitro");
        btnArbitros.setBorder(null);
        btnArbitros.setBorderPainted(false);
        btnArbitros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArbitrosActionPerformed(evt);
            }
        });

        botonSalirPrincipal.setBackground(new java.awt.Color(204, 255, 255));
        botonSalirPrincipal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonSalirPrincipal.setForeground(new java.awt.Color(51, 51, 51));
        botonSalirPrincipal.setText("Salir");
        botonSalirPrincipal.setBorder(null);
        botonSalirPrincipal.setBorderPainted(false);
        botonSalirPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirPrincipalActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Arbitro");

        btnJugadores1.setBackground(new java.awt.Color(204, 255, 255));
        btnJugadores1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnJugadores1.setForeground(new java.awt.Color(51, 51, 51));
        btnJugadores1.setText("Cargar Jugador");
        btnJugadores1.setBorder(null);
        btnJugadores1.setBorderPainted(false);
        btnJugadores1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugadores1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Jugador");

        btnArbitros3.setBackground(new java.awt.Color(204, 255, 255));
        btnArbitros3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnArbitros3.setForeground(new java.awt.Color(51, 51, 51));
        btnArbitros3.setText("Mostrar Arbitro");
        btnArbitros3.setBorder(null);
        btnArbitros3.setBorderPainted(false);
        btnArbitros3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArbitros3ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Otros");

        botonVistaEquipos2.setBackground(new java.awt.Color(204, 255, 255));
        botonVistaEquipos2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonVistaEquipos2.setForeground(new java.awt.Color(51, 51, 51));
        botonVistaEquipos2.setText("Jugadores que superan ciertos goles");
        botonVistaEquipos2.setBorder(null);
        botonVistaEquipos2.setBorderPainted(false);
        botonVistaEquipos2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVistaEquipos2ActionPerformed(evt);
            }
        });

        btnMenuEliminarJugador.setBackground(new java.awt.Color(204, 255, 255));
        btnMenuEliminarJugador.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnMenuEliminarJugador.setForeground(new java.awt.Color(51, 51, 51));
        btnMenuEliminarJugador.setText("Eliminar Jugador");
        btnMenuEliminarJugador.setBorder(null);
        btnMenuEliminarJugador.setBorderPainted(false);
        btnMenuEliminarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuEliminarJugadorActionPerformed(evt);
            }
        });

        btnMenuModificarJugador.setBackground(new java.awt.Color(204, 255, 255));
        btnMenuModificarJugador.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnMenuModificarJugador.setForeground(new java.awt.Color(51, 51, 51));
        btnMenuModificarJugador.setText("Modificar Jugador");
        btnMenuModificarJugador.setBorder(null);
        btnMenuModificarJugador.setBorderPainted(false);
        btnMenuModificarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuModificarJugadorActionPerformed(evt);
            }
        });

        btnMenuEliminarArbitro.setBackground(new java.awt.Color(204, 255, 255));
        btnMenuEliminarArbitro.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnMenuEliminarArbitro.setForeground(new java.awt.Color(51, 51, 51));
        btnMenuEliminarArbitro.setText("Eliminar Arbitro");
        btnMenuEliminarArbitro.setBorder(null);
        btnMenuEliminarArbitro.setBorderPainted(false);
        btnMenuEliminarArbitro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuEliminarArbitroActionPerformed(evt);
            }
        });

        btnMenuModificarArbitro.setBackground(new java.awt.Color(204, 255, 255));
        btnMenuModificarArbitro.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnMenuModificarArbitro.setForeground(new java.awt.Color(51, 51, 51));
        btnMenuModificarArbitro.setText("Modificar Arbitro");
        btnMenuModificarArbitro.setBorder(null);
        btnMenuModificarArbitro.setBorderPainted(false);
        btnMenuModificarArbitro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuModificarArbitroActionPerformed(evt);
            }
        });

        botonVistaEquipos3.setBackground(new java.awt.Color(204, 255, 255));
        botonVistaEquipos3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonVistaEquipos3.setForeground(new java.awt.Color(51, 51, 51));
        botonVistaEquipos3.setText("Cantidad de jugadores por equipo");
        botonVistaEquipos3.setBorder(null);
        botonVistaEquipos3.setBorderPainted(false);
        botonVistaEquipos3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVistaEquipos3ActionPerformed(evt);
            }
        });

        botonVistaEquipos4.setBackground(new java.awt.Color(204, 255, 255));
        botonVistaEquipos4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonVistaEquipos4.setForeground(new java.awt.Color(51, 51, 51));
        botonVistaEquipos4.setText("Cantidad de jugadores por posicion");
        botonVistaEquipos4.setBorder(null);
        botonVistaEquipos4.setBorderPainted(false);
        botonVistaEquipos4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVistaEquipos4ActionPerformed(evt);
            }
        });

        botonVistaEquipos5.setBackground(new java.awt.Color(204, 255, 255));
        botonVistaEquipos5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonVistaEquipos5.setForeground(new java.awt.Color(51, 51, 51));
        botonVistaEquipos5.setText("Filtrar Arbitros");
        botonVistaEquipos5.setBorder(null);
        botonVistaEquipos5.setBorderPainted(false);
        botonVistaEquipos5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVistaEquipos5ActionPerformed(evt);
            }
        });

        botonVistaEquipos6.setBackground(new java.awt.Color(204, 255, 255));
        botonVistaEquipos6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonVistaEquipos6.setForeground(new java.awt.Color(51, 51, 51));
        botonVistaEquipos6.setText("Jugador con más expulsiones");
        botonVistaEquipos6.setBorder(null);
        botonVistaEquipos6.setBorderPainted(false);
        botonVistaEquipos6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVistaEquipos6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMenuLayout = new javax.swing.GroupLayout(panelMenu);
        panelMenu.setLayout(panelMenuLayout);
        panelMenuLayout.setHorizontalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenuLayout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnJugadores1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnJugadores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnArbitros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonSalirPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator6)
                    .addComponent(btnMenuEliminarJugador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnMenuModificarJugador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnArbitros3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMenuEliminarArbitro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMenuModificarArbitro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonVistaEquipos2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonVistaEquipos4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelMenuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(botonVistaEquipos5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonVistaEquipos6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenuLayout.createSequentialGroup()
                    .addComponent(botonVistaEquipos3, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelMenuLayout.setVerticalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(96, 96, 96)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnJugadores1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuEliminarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuModificarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnArbitros, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnArbitros3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuEliminarArbitro, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuModificarArbitro, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addGap(62, 62, 62)
                .addComponent(botonVistaEquipos2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonVistaEquipos5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonVistaEquipos6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonVistaEquipos4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(botonSalirPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMenuLayout.createSequentialGroup()
                    .addContainerGap(715, Short.MAX_VALUE)
                    .addComponent(botonVistaEquipos3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(286, 286, 286)))
        );

        jPanel5.setBackground(new java.awt.Color(255, 0, 51));
        jPanel5.setLayout(new java.awt.CardLayout());

        jLabel22.setText(":>");

        javax.swing.GroupLayout PanelInformacionLayout = new javax.swing.GroupLayout(PanelInformacion);
        PanelInformacion.setLayout(PanelInformacionLayout);
        PanelInformacionLayout.setHorizontalGroup(
            PanelInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInformacionLayout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(237, Short.MAX_VALUE))
        );
        PanelInformacionLayout.setVerticalGroup(
            PanelInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInformacionLayout.createSequentialGroup()
                .addGap(362, 362, 362)
                .addComponent(jLabel22)
                .addContainerGap(666, Short.MAX_VALUE))
        );

        jPanel5.add(PanelInformacion, "PanelInfo");

        panelIngresoJugador.setPreferredSize(new java.awt.Dimension(919, 660));

        PanelIngreso.setPreferredSize(new java.awt.Dimension(919, 660));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("/");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Información personal");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Nombre");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        txtCantidadAmarillas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadAmarillasActionPerformed(evt);
            }
        });
        txtCantidadAmarillas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadAmarillasKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Apellido");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Nacimiento ");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Nacionalidad");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Detalles de jugador");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Club");

        botonCargarJugador.setText("Cargar");
        botonCargarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarJugadorActionPerformed(evt);
            }
        });

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Goles");

        txtNacionalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNacionalidadActionPerformed(evt);
            }
        });
        txtNacionalidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNacionalidadKeyTyped(evt);
            }
        });

        txtApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoActionPerformed(evt);
            }
        });
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });

        txtAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnioActionPerformed(evt);
            }
        });
        txtAnio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnioKeyTyped(evt);
            }
        });

        txtMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMesActionPerformed(evt);
            }
        });
        txtMes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMesKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel13.setText("Registro De Jugador ");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("/");

        MensajeErrorNombre.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorNombre.setText("\" \"");

        MensajeErrorApellido.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorApellido.setText("\" \"");

        MensajeErrorNacionalidad.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorNacionalidad.setText("\" \"");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Posicion");

        BoxPosiciones.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BoxPosiciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arquero", "Defensor central", "Lateral derecho", "Lateral izquierdo", "Volante central", "Volante por derecha", "Volante por izquierda", "Enganche", "Delantero centro", "Segundo delantero" }));
        BoxPosiciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxPosicionesActionPerformed(evt);
            }
        });
        BoxPosiciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BoxPosicionesKeyTyped(evt);
            }
        });

        BoxEquipo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BoxEquipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "River Plate", "Boca Juniors", "Independiente", "Racing Club", "San Lorenzo", "Velez Sarsfield", "Rosario Central", "Newells Old Boys", "Estudiantes de La Plata", "Huracan" }));
        BoxEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxEquipoActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Tarjetas Rojas");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setText("Tarjetas Amarillas");

        txtDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaActionPerformed(evt);
            }
        });
        txtDia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDiaKeyTyped(evt);
            }
        });

        txtCantidadRojas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadRojasActionPerformed(evt);
            }
        });
        txtCantidadRojas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadRojasKeyTyped(evt);
            }
        });

        txtCantidadGoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadGolesActionPerformed(evt);
            }
        });
        txtCantidadGoles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadGolesKeyTyped(evt);
            }
        });

        MensajeErrorFecha.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorFecha.setText("\" \"");

        MensajeErrorGoles.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorGoles.setText("\" \"");

        MensajeErrorAmarillas.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorAmarillas.setText("\" \"");

        MensajeErrorRojas.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorRojas.setText("\" \"");

        javax.swing.GroupLayout PanelIngresoLayout = new javax.swing.GroupLayout(PanelIngreso);
        PanelIngreso.setLayout(PanelIngresoLayout);
        PanelIngresoLayout.setHorizontalGroup(
            PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelIngresoLayout.createSequentialGroup()
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelIngresoLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
                            .addComponent(jSeparator1)
                            .addGroup(PanelIngresoLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(PanelIngresoLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8)
                                            .addGroup(PanelIngresoLayout.createSequentialGroup()
                                                .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel14)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(MensajeErrorNombre)
                                            .addComponent(MensajeErrorFecha))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel9)
                                            .addComponent(txtNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(MensajeErrorApellido)
                                            .addComponent(MensajeErrorNacionalidad)))
                                    .addGroup(PanelIngresoLayout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(PanelIngresoLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(botonCargarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(22, 22, 22))
                                            .addGroup(PanelIngresoLayout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel12)
                                                    .addComponent(BoxEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCantidadGoles, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(PanelIngresoLayout.createSequentialGroup()
                                                        .addGap(6, 6, 6)
                                                        .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(MensajeErrorGoles))))
                                                .addGap(58, 58, 58)
                                                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel17)
                                                    .addComponent(BoxPosiciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCantidadAmarillas, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(MensajeErrorAmarillas))
                                                .addGap(0, 0, Short.MAX_VALUE))))))))
                    .addGroup(PanelIngresoLayout.createSequentialGroup()
                        .addGap(352, 352, 352)
                        .addComponent(jLabel16)
                        .addGap(0, 468, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(PanelIngresoLayout.createSequentialGroup()
                .addGap(308, 308, 308)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelIngresoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(MensajeErrorRojas))
                    .addComponent(txtCantidadRojas, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelIngresoLayout.createSequentialGroup()
                    .addGap(49, 49, 49)
                    .addComponent(jLabel13)
                    .addContainerGap(628, Short.MAX_VALUE)))
        );
        PanelIngresoLayout.setVerticalGroup(
            PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelIngresoLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelIngresoLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelIngresoLayout.createSequentialGroup()
                        .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MensajeErrorNombre)
                    .addComponent(MensajeErrorApellido))
                .addGap(22, 22, 22)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MensajeErrorNacionalidad)
                    .addComponent(MensajeErrorFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BoxEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BoxPosiciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCantidadGoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidadAmarillas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MensajeErrorAmarillas)
                    .addComponent(MensajeErrorGoles))
                .addGap(20, 20, 20)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCantidadRojas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MensajeErrorRojas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelIngresoLayout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonCargarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(PanelIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelIngresoLayout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(589, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout panelIngresoJugadorLayout = new javax.swing.GroupLayout(panelIngresoJugador);
        panelIngresoJugador.setLayout(panelIngresoJugadorLayout);
        panelIngresoJugadorLayout.setHorizontalGroup(
            panelIngresoJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIngresoJugadorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelIngresoJugadorLayout.setVerticalGroup(
            panelIngresoJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel5.add(panelIngresoJugador, "cargarJugador");

        jPanel2.setPreferredSize(new java.awt.Dimension(919, 660));

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel32.setText("/");

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel33.setText("Información personal");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel34.setText("Nombre");

        txtNombre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombre1ActionPerformed(evt);
            }
        });
        txtNombre1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombre1KeyTyped(evt);
            }
        });

        txtDiaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaAActionPerformed(evt);
            }
        });
        txtDiaA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDiaAKeyTyped(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel35.setText("Apellido");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel36.setText("Nacimiento ");

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel37.setText("Nacionalidad");

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel38.setText("Detalles de arbitro");

        jLabel39.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel39.setText("Tarjetas totales");

        txtTarjetasTotales.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTarjetasTotales.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTarjetasTotalesKeyTyped(evt);
            }
        });

        botonCargarArbitro.setText("Cargar");
        botonCargarArbitro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarArbitroActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel40.setText("Es internacional? ");

        BoxInternacional.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No" }));

        txtNacionalidad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNacionalidad1ActionPerformed(evt);
            }
        });
        txtNacionalidad1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNacionalidad1KeyTyped(evt);
            }
        });

        txtApellido1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellido1ActionPerformed(evt);
            }
        });
        txtApellido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellido1KeyTyped(evt);
            }
        });

        txtAnioA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnioAActionPerformed(evt);
            }
        });
        txtAnioA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnioAKeyTyped(evt);
            }
        });

        txtMesA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMesAActionPerformed(evt);
            }
        });
        txtMesA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMesAKeyTyped(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel41.setText("Registro De Arbitro ");

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel42.setText("/");

        MensajeErrorNombreA.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorNombreA.setText("\" \"");

        MensajeErrorApellidoA.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorApellidoA.setText("\" \"");

        MensajeErrorFechaA.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorFechaA.setText("\" \"");

        MensajeErrorNacionalidadA.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorNacionalidadA.setText("\" \"");

        MensajeErrorTarTotales.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MensajeErrorTarTotales.setText("\" \"");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator8)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator9)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel33)
                                        .addGap(78, 78, 78)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel36)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(txtDiaA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel42)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtMesA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel32)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtAnioA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(MensajeErrorNombreA)
                                            .addComponent(MensajeErrorFechaA))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel35)
                                            .addComponent(jLabel37)
                                            .addComponent(txtNacionalidad1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(MensajeErrorApellidoA)
                                            .addComponent(MensajeErrorNacionalidadA)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel38)
                                        .addGap(102, 102, 102)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(224, 224, 224)
                                                .addComponent(botonCargarArbitro, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(MensajeErrorTarTotales)
                                            .addComponent(txtTarjetasTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BoxInternacional, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel40)
                                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator7))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(49, 49, 49)
                    .addComponent(jLabel41)
                    .addContainerGap(651, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(jLabel35))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MensajeErrorNombreA)
                    .addComponent(MensajeErrorApellidoA))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMesA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAnioA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNacionalidad1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MensajeErrorFechaA)
                    .addComponent(MensajeErrorNacionalidadA))
                .addGap(80, 80, 80)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTarjetasTotales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MensajeErrorTarTotales)
                .addGap(12, 12, 12)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BoxInternacional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCargarArbitro, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(589, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout panelIngresoArbitroLayout = new javax.swing.GroupLayout(panelIngresoArbitro);
        panelIngresoArbitro.setLayout(panelIngresoArbitroLayout);
        panelIngresoArbitroLayout.setHorizontalGroup(
            panelIngresoArbitroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
        );
        panelIngresoArbitroLayout.setVerticalGroup(
            panelIngresoArbitroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIngresoArbitroLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.getAccessibleContext().setAccessibleName("PanelArbitro");

        jPanel5.add(panelIngresoArbitro, "cargarArbitro");

        tablaJugadores.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaJugadores.setForeground(new java.awt.Color(51, 51, 51));
        tablaJugadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Nacimiento", "Nacionalidad", "Club", "Posicion", "Goles", "TarjetasAmarillas", "TarjetasRojas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaJugadores);

        javax.swing.GroupLayout MostrarJugadoresLayout = new javax.swing.GroupLayout(MostrarJugadores);
        MostrarJugadores.setLayout(MostrarJugadoresLayout);
        MostrarJugadoresLayout.setHorizontalGroup(
            MostrarJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1307, Short.MAX_VALUE)
            .addGroup(MostrarJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1307, Short.MAX_VALUE))
        );
        MostrarJugadoresLayout.setVerticalGroup(
            MostrarJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1044, Short.MAX_VALUE)
            .addGroup(MostrarJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1044, Short.MAX_VALUE))
        );

        jPanel5.add(MostrarJugadores, "MostrarJugadores");

        MostrarArbitro.setPreferredSize(new java.awt.Dimension(931, 1044));

        tablaArbitros.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaArbitros.setForeground(new java.awt.Color(51, 51, 51));
        tablaArbitros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Nacimiento", "Nacionalidad", "Cantidad de tarjetas", "Internacionalidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaArbitros);

        javax.swing.GroupLayout MostrarArbitroLayout = new javax.swing.GroupLayout(MostrarArbitro);
        MostrarArbitro.setLayout(MostrarArbitroLayout);
        MostrarArbitroLayout.setHorizontalGroup(
            MostrarArbitroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 628, Short.MAX_VALUE)
            .addGroup(MostrarArbitroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE))
        );
        MostrarArbitroLayout.setVerticalGroup(
            MostrarArbitroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1044, Short.MAX_VALUE)
            .addGroup(MostrarArbitroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1044, Short.MAX_VALUE))
        );

        jPanel5.add(MostrarArbitro, "MostrarArbitro");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel23.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel23.setText("Eliminar jugador");

        tablaEliminarJugador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Club", "Nombre", "Apellido", "Nacimiento", "Nacionalidad", "Tarjetas Amarillas", "Tarjetas Rojas", "Goles"
            }
        ));
        jScrollPane1.setViewportView(tablaEliminarJugador);

        combEquiposElimJugador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boca Juniors", "River Plate", "Rosario Central", "Velez Sarsfield", "Huracan", "Independiente", "Racing Club", "San Lorenzo", "Estudiantes de La Plata", "Newells Old Boys ", "Todos" }));
        combEquiposElimJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combEquiposElimJugadorActionPerformed(evt);
            }
        });

        jLabel24.setText("Seleccione el equipo a mostrar");

        btnEliminarJugador.setText("Eliminar");
        btnEliminarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarJugadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(combEquiposElimJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combEquiposElimJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEliminarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout EliminarJugadorLayout = new javax.swing.GroupLayout(EliminarJugador);
        EliminarJugador.setLayout(EliminarJugadorLayout);
        EliminarJugadorLayout.setHorizontalGroup(
            EliminarJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EliminarJugadorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        EliminarJugadorLayout.setVerticalGroup(
            EliminarJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EliminarJugadorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(330, Short.MAX_VALUE))
        );

        jPanel5.add(EliminarJugador, "eliminarJugador");

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel46.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel46.setText("Eliminar arbitro");

        tablaEliminarArbitro1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Nacimiento", "Nacionalidad", "Tarjetas Totales", "¿Es internacional?"
            }
        ));
        jScrollPane5.setViewportView(tablaEliminarArbitro1);

        btnEliminarArbitro2.setText("Eliminar");
        btnEliminarArbitro2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarArbitro2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addGap(659, 659, 659))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5)
                            .addComponent(jSeparator14, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminarArbitro2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarArbitro2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout EliminarArbitroLayout = new javax.swing.GroupLayout(EliminarArbitro);
        EliminarArbitro.setLayout(EliminarArbitroLayout);
        EliminarArbitroLayout.setHorizontalGroup(
            EliminarArbitroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EliminarArbitroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        EliminarArbitroLayout.setVerticalGroup(
            EliminarArbitroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.add(EliminarArbitro, "Eliminar Arbitro");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(931, 700));

        jLabel25.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel25.setText("Modificar Jugador ");

        cmboxEquiposModificar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmboxEquiposModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxEquiposModificarActionPerformed(evt);
            }
        });

        jLabel26.setText("Selecciona el equipo del jugador a modificar");

        cmBoxNombreModificarJugador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmBoxNombreModificarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmBoxNombreModificarJugadorActionPerformed(evt);
            }
        });

        jLabel27.setText("Nombre del jugador a modificar");

        txtApellidoModificarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoModificarJugadorActionPerformed(evt);
            }
        });

        jLabel28.setText("Apellido ");

        jLabel29.setText("Nacimiento");

        cmBoxPosicionModifJugadores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel30.setText("Posicion ");

        jLabel31.setText("Tarjetas Rojas");

        jLabel43.setText("Tarjetas Amarillas");

        jLabel44.setText("Goles ");

        btnCargrModifJugadores.setText("Cargar");
        btnCargrModifJugadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargrModifJugadoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(cmboxEquiposModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31)
                                    .addComponent(txtTarRojasModifJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtApellidoModificarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel43)
                                    .addComponent(spinnerTarAmarModifJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29)
                                    .addComponent(txtBornModifJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(100, 100, 100)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnCargrModifJugadores)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel30)
                                    .addComponent(cmBoxPosicionModifJugadores, 0, 146, Short.MAX_VALUE)
                                    .addComponent(cmBoxNombreModificarJugador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(spinnerGolesModifJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmBoxNombreModificarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmboxEquiposModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel28)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidoModificarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBornModifJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmBoxPosicionModifJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel43)
                    .addComponent(jLabel44))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTarRojasModifJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerTarAmarModifJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerGolesModifJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnCargrModifJugadores)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ModificarJugadorLayout = new javax.swing.GroupLayout(ModificarJugador);
        ModificarJugador.setLayout(ModificarJugadorLayout);
        ModificarJugadorLayout.setHorizontalGroup(
            ModificarJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        ModificarJugadorLayout.setVerticalGroup(
            ModificarJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel5.add(ModificarJugador, "ModificarJugador");

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setPreferredSize(new java.awt.Dimension(919, 660));

        jLabel45.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel45.setText("Modificar Arbitro");

        tablaEliminarArbitro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tablaEliminarArbitro);

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ModificarArbitroLayout = new javax.swing.GroupLayout(ModificarArbitro);
        ModificarArbitro.setLayout(ModificarArbitroLayout);
        ModificarArbitroLayout.setHorizontalGroup(
            ModificarArbitroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 972, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        ModificarArbitroLayout.setVerticalGroup(
            ModificarArbitroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel5.add(ModificarArbitro, "ModificarArbitro");

        javax.swing.GroupLayout canJugadoresPEquipoLayout = new javax.swing.GroupLayout(canJugadoresPEquipo);
        canJugadoresPEquipo.setLayout(canJugadoresPEquipoLayout);
        canJugadoresPEquipoLayout.setHorizontalGroup(
            canJugadoresPEquipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 628, Short.MAX_VALUE)
        );
        canJugadoresPEquipoLayout.setVerticalGroup(
            canJugadoresPEquipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1044, Short.MAX_VALUE)
        );

        jPanel5.add(canJugadoresPEquipo, "card11");

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnJugadores2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugadores2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnJugadores2ActionPerformed

    private void btnArbitros1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArbitros1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnArbitros1ActionPerformed

    private void botonVistaEquipos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVistaEquipos1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVistaEquipos1ActionPerformed

    private void btnJugadores3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugadores3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnJugadores3ActionPerformed

    private void btnArbitros2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArbitros2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnArbitros2ActionPerformed

    private void txtMesAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMesAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMesAActionPerformed

    private void txtAnioAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnioAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnioAActionPerformed

    private void txtApellido1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellido1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellido1ActionPerformed

    private void txtNacionalidad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNacionalidad1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNacionalidad1ActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
      //Eliminacion de contenido en recuadros de texto
        txtDiaA.setText("");
        txtMesA.setText("");
        txtAnioA.setText("");
        txtApellido1.setText("");
        txtNombre1.setText("");
        txtNacionalidad1.setText("");
        txtTarjetasTotales.setText("");
        //Lo mismo pero con los mensajes de error
        MensajeErrorApellidoA.setText("");
        MensajeErrorFechaA.setText("");
        MensajeErrorNacionalidadA.setText("");
        MensajeErrorNombreA.setText("");
        MensajeErrorTarTotales.setText("");
        
        //Lo mismo pero con el color de fondo
        txtDiaA.setBackground(Color.WHITE);
        txtAnioA.setBackground(Color.WHITE);
        txtMesA.setBackground(Color.WHITE);
        txtNacionalidad1.setBackground(Color.WHITE);
        txtNombre1.setBackground(Color.WHITE);
        txtApellido1.setBackground(Color.WHITE);
        txtTarjetasTotales.setBackground(Color.WHITE);
        
        //Abro la venta de precentacion    
        CardLayout cl = (CardLayout) jPanel5.getLayout();
        cl.show(jPanel5, "PanelInfo");
    }//GEN-LAST:event_btnSalirActionPerformed

    private void botonCargarArbitroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarArbitroActionPerformed
        String nombre= txtNombre1.getText();
        String apellido = txtApellido1.getText();
        String nacionalidad=txtNacionalidad1.getText();
        boolean validacion= true;
        
        if(nombre.isEmpty()){
        MensajeErrorNombreA.setText("Ingrese Nombre Valido");
        txtNombre1.setBackground(Color.pink);
        validacion= false;
        }else{
        MensajeErrorNombreA.setText("");
        txtNombre1.setBackground(Color.WHITE);
        }
            
        if(apellido.isEmpty()){
        MensajeErrorApellidoA.setText("Ingrese Apellido Valido");
        txtApellido1.setBackground(Color.pink);
        validacion=false;
        }else{
        MensajeErrorApellidoA.setText("");
        txtApellido1.setBackground(Color.WHITE);
        }
        
        if(nacionalidad.isEmpty()){
        MensajeErrorNacionalidadA.setText("Ingrese Nacionalidad Valida");
        txtNacionalidad1.setBackground(Color.pink);
        validacion= false;
        }else{
        MensajeErrorNacionalidadA.setText("");
        txtNacionalidad1.setBackground(Color.WHITE);
        }
        
        String diaTexto = txtDiaA.getText().trim();
if (diaTexto.isEmpty()) {
    MensajeErrorFechaA.setText("Fecha inválida: día vacío");
    txtDiaA.setBackground(Color.PINK);
    validacion = false;
} else {
    try {
        int dia = Integer.parseInt(diaTexto);
        if (dia < 1 || dia > 30) {
            MensajeErrorFechaA.setText("Día inválido (1-30)");
            txtDiaA.setBackground(Color.PINK);
            validacion = false;
        } else {
            txtDiaA.setBackground(Color.WHITE);
        }
    } catch (NumberFormatException e) {
        MensajeErrorFechaA.setText("Día debe ser numérico");
        txtDiaA.setBackground(Color.PINK);
        validacion = false;
    }
}


String mesTexto = txtMesA.getText().trim();
if (mesTexto.isEmpty()) {
    MensajeErrorFechaA.setText("Fecha inválida: mes vacío");
    txtMesA.setBackground(Color.PINK);
    validacion = false;
} else {
    try {
        int MES = Integer.parseInt(mesTexto);
        if (MES < 1 || MES > 12) {
            MensajeErrorFechaA.setText("Mes inválido Ej:(Enero,...,Diciembre)");
            txtMesA.setBackground(Color.PINK);
            validacion = false;
        } else {
            txtMesA.setBackground(Color.WHITE);
        }
    } catch (NumberFormatException e) {
        MensajeErrorFechaA.setText("Mes debe ser numérico");
        txtMesA.setBackground(Color.PINK);
        validacion = false;
    }
}


String anioTexto = txtAnioA.getText().trim();
if (anioTexto.isEmpty()) {
    MensajeErrorFechaA.setText("Año inválido: campo vacío");
    txtAnioA.setBackground(Color.PINK);
    validacion = false;
} else {
    try {
        int anio = Integer.parseInt(anioTexto);
        if (anio < 1940 || anio > 2023) {
            MensajeErrorFechaA.setText("Año inválido (1940-2023)");
            txtAnioA.setBackground(Color.PINK);
            validacion = false;
        } else {
            txtAnioA.setBackground(Color.WHITE);
        }
    } catch (NumberFormatException e) {
        MensajeErrorFechaA.setText("Año Debe Ser Numérico");
        txtAnioA.setBackground(Color.PINK);
        validacion = false;
    }
}
String cantTarjetasTexto = txtTarjetasTotales.getText().trim();
if (cantTarjetasTexto.isEmpty()) {
    MensajeErrorTarTotales.setText("Error: campo vacío");
    txtTarjetasTotales.setBackground(Color.PINK);
    validacion = false;
} else {
    try {
        int cantT = Integer.parseInt(cantTarjetasTexto);
        
     
    } catch (NumberFormatException e) {
       MensajeErrorTarTotales.setText("Cantidad de Tarjetas Debe Ser Numérico");
       txtTarjetasTotales.setBackground(Color.PINK);
        validacion = false;
    }
}
        if(!validacion){
        JOptionPane.showMessageDialog(this, "Error en la carga");
        return;
        }
       
        String a = (String) BoxInternacional.getSelectedItem();
        boolean a1;
        if (a.equals("Si")) {
          a1 = true;
           } else {
          a1 = false;}
            
        String fecha= txtDiaA+"/"+txtMesA+"/"+txtAnioA;
        int cantT = Integer.parseInt(cantTarjetasTexto);
        controladorArbitro.colocarNombre(nombre);
        controladorArbitro.colocarApellido(apellido);
        controladorArbitro.colocarInternacional(a1);
        controladorArbitro.colocarNacimiento(fecha);
        controladorArbitro.colocarTarjetasTotales(cantT);
        controladorArbitro.colocarNacionalidad(nacionalidad);
        //insertar jugador a la lista
      

        //borrar texto
        txtDiaA.setText("");
        txtMesA.setText("");
        txtAnioA.setText("");
        txtApellido1.setText("");
        txtNombre1.setText("");
        txtNacionalidad1.setText("");
        txtTarjetasTotales.setText("");
        MensajeErrorFechaA.setText("");
        MensajeErrorTarTotales.setText("");
  
        //Lo mismo pero con el color de fondo
        txtDiaA.setBackground(Color.WHITE);
        txtAnioA.setBackground(Color.WHITE);
        txtMesA.setBackground(Color.WHITE);
        txtNacionalidad1.setBackground(Color.WHITE);
        txtNombre1.setBackground(Color.WHITE);
        txtApellido1.setBackground(Color.WHITE);
        txtTarjetasTotales.setBackground(Color.WHITE);
        
          controladorArbitro.AgregarArbitroALista();
        JOptionPane.showMessageDialog(this, "Se cargo el Arbitro correctamente");
    }//GEN-LAST:event_botonCargarArbitroActionPerformed

    private void txtDiaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiaAActionPerformed

    private void txtNombre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombre1ActionPerformed

    private void txtCantidadGolesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadGolesKeyTyped
        char caracter = evt.getKeyChar();
        if (!Character.isDigit(caracter) && caracter != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadGolesKeyTyped

    private void txtCantidadGolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadGolesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadGolesActionPerformed

    private void txtCantidadRojasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadRojasKeyTyped
        char caracter= evt.getKeyChar();
        if(!Character.isDigit(caracter) && caracter!= KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadRojasKeyTyped

    private void txtCantidadRojasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadRojasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadRojasActionPerformed

    private void txtDiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiaKeyTyped
        char caracter= evt.getKeyChar();
        if(!Character.isDigit(caracter) && caracter!= KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
        if(txtDia.getText().length()>=2 && caracter != KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
    }//GEN-LAST:event_txtDiaKeyTyped

    private void txtDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiaActionPerformed

    private void BoxEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxEquipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoxEquipoActionPerformed

    private void BoxPosicionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxPosicionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoxPosicionesActionPerformed

    private void txtMesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMesKeyTyped
        char caracter= evt.getKeyChar();
        if(!Character.isDigit(caracter) && caracter!= KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
        if(txtMes.getText().length()>=2 && caracter != KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
    }//GEN-LAST:event_txtMesKeyTyped

    private void txtMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMesActionPerformed

    private void txtAnioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnioKeyTyped
        char caracter = evt.getKeyChar();
        if(!Character.isDigit(caracter) && caracter != KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
        if(txtAnio.getText().length()>=4 && caracter != KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }

    }//GEN-LAST:event_txtAnioKeyTyped

    private void txtAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnioActionPerformed

    private void txtApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoActionPerformed

    private void txtNacionalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNacionalidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNacionalidadActionPerformed

    private void botonCargarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarJugadorActionPerformed
        String nombre= txtNombre.getText();
        String apellido = txtApellido.getText();
        String nacionalidad=txtNacionalidad.getText();
        boolean validacion= true;
        
        if(nombre.isEmpty()){
        MensajeErrorNombre.setText("Ingrese Nombre Valido");
        txtNombre.setBackground(Color.pink);
        validacion= false;
        }else{
        MensajeErrorNombre.setText("");
        txtNombre.setBackground(Color.WHITE);
        }
            
        if(apellido.isEmpty()){
        MensajeErrorApellido.setText("Ingrese Apellido Valido");
        txtApellido.setBackground(Color.pink);
        validacion=false;
        }else{
        MensajeErrorApellido.setText("");
        txtApellido.setBackground(Color.WHITE);
        }
        
        if(nacionalidad.isEmpty()){
        MensajeErrorNacionalidad.setText("Ingrese Nacionalidad Valida");
        txtNacionalidad.setBackground(Color.pink);
        validacion= false;
        }else{
        MensajeErrorNacionalidad.setText("");
        txtNacionalidad.setBackground(Color.WHITE);
        }
        


        
        
 //======================================== FECHA ========================================
String diaTexto = txtDia.getText().trim();
if (diaTexto.isEmpty()) {
    MensajeErrorFecha.setText("Fecha inválida: día vacío");
    txtDia.setBackground(Color.PINK);
    validacion = false;
} else {
    try {
        int dia = Integer.parseInt(diaTexto);
        if (dia < 1 || dia > 30) {
            MensajeErrorFecha.setText("Día inválido (1-30)");
            txtDia.setBackground(Color.PINK);
            validacion = false;
        } else {
            txtDia.setBackground(Color.WHITE);
        }
    } catch (NumberFormatException e) {
        MensajeErrorFecha.setText("Día debe ser numérico");
        txtDia.setBackground(Color.PINK);
        validacion = false;
    }
}


String mesTexto = txtMes.getText().trim();
if (mesTexto.isEmpty()) {
    MensajeErrorFecha.setText("Fecha inválida: mes vacío");
    txtMes.setBackground(Color.PINK);
    validacion = false;
} else {
    try {
        int MES = Integer.parseInt(mesTexto);
        if (MES < 1 || MES > 12) {
            MensajeErrorFecha.setText("Mes inválido Ej:(Enero,...,Diciembre)");
            txtMes.setBackground(Color.PINK);
            validacion = false;
        } else {
            txtMes.setBackground(Color.WHITE);
        }
    } catch (NumberFormatException e) {
        MensajeErrorFecha.setText("Mes debe ser numérico");
        txtMes.setBackground(Color.PINK);
        validacion = false;
    }
}


String anioTexto = txtAnio.getText().trim();
if (anioTexto.isEmpty()) {
    MensajeErrorFecha.setText("Año inválido: campo vacío");
    txtAnio.setBackground(Color.PINK);
    validacion = false;
} else {
    try {
        int anio = Integer.parseInt(anioTexto);
        if (anio < 1940 || anio > 2023) {
            MensajeErrorFecha.setText("Año inválido (1940-2023)");
            txtAnio.setBackground(Color.PINK);
            validacion = false;
        } else {
            txtAnio.setBackground(Color.WHITE);
        }
    } catch (NumberFormatException e) {
        MensajeErrorFecha.setText("Año Debe Ser Numérico");
        txtAnio.setBackground(Color.PINK);
        validacion = false;
    }
}

    String goles = txtCantidadGoles.getText().trim();
if (goles.isEmpty()) {
    MensajeErrorGoles.setText("Inserte Una cantidad Numerica De Goles");
    txtCantidadGoles.setBackground(Color.PINK);
    validacion = false;
} else {
    try {
       int cantGoles = Integer.parseInt(goles);
        txtCantidadGoles.setBackground(Color.WHITE);
        MensajeErrorGoles.setText("");
    } catch (NumberFormatException e) {
        MensajeErrorGoles.setText("La Cantidad De goles debe ser numérico");
        txtCantidadGoles.setBackground(Color.PINK);
        validacion = false;
    }
}
    String amarillas = txtCantidadAmarillas.getText().trim();
if (amarillas.isEmpty()) {
    MensajeErrorAmarillas.setText("Inserte Una cantidad Numerica De Tarjetas");
    txtCantidadAmarillas.setBackground(Color.PINK);
    validacion = false;
} else {
    try {
       int cantAmarillas = Integer.parseInt(amarillas);
        txtCantidadAmarillas.setBackground(Color.WHITE);
        MensajeErrorAmarillas.setText("");
    } catch (NumberFormatException e) {
        MensajeErrorAmarillas.setText("La Cantidad De Ta. Amarillas Debe Ser Numérico");
        txtCantidadAmarillas.setBackground(Color.PINK);
        validacion = false;
    }
}

    String rojas = txtCantidadRojas.getText().trim();
if (rojas.isEmpty()) {
    MensajeErrorRojas.setText("Inserte Una cantidad Numerica De Tarjetas");
    txtCantidadRojas.setBackground(Color.PINK);
    validacion = false;
} else {
    try {
       int cantRojas = Integer.parseInt(amarillas);
        txtCantidadRojas.setBackground(Color.WHITE);
        MensajeErrorRojas.setText("");
    } catch (NumberFormatException e) {
        MensajeErrorRojas.setText("La Cantidad De Ta. Roja Debe Ser Numérico");
        txtCantidadRojas.setBackground(Color.PINK);
        validacion = false;
    }
}
        if(!validacion){
        JOptionPane.showMessageDialog(this, "Error en la carga");
        return;
        }
        //se eliminan errores anteriores
        MensajeErrorNombre.setText("");
        MensajeErrorApellido.setText("");
        MensajeErrorNacionalidad.setText("");

        
        
        String a= (String) BoxPosiciones.getSelectedItem();
       String b = (String) BoxEquipo.getSelectedItem();
        String c=diaTexto+"/"+mesTexto+"/"+anioTexto ;
       // int fecha= Integer.parseInt(c);

        controladorJugador.colocarNombre(nombre);
        controladorJugador.colocarGoles(goles);
        controladorJugador.colocarNacimiento(c);
        controladorJugador.colocarClubActual(b);
        controladorJugador.colocarTarjetasAmarillas(amarillas);
        controladorJugador.colocarTarjrtasRojas(rojas);
        controladorJugador.colocarPosicion(a);
        controladorJugador.colocarApellido(apellido);
        controladorJugador.colocarNacionalidad(nacionalidad);

        //insertar jugador a la lista
        controladorJugador.AgregarJugadorALista();
        JOptionPane.showMessageDialog(this, "Se cargo el jugador correctamente");

        //borrar texto
        txtCantidadAmarillas.setText("");
        txtDia.setText("");
        txtMes.setText("");
        txtAnio.setText("");
        txtApellido.setText("");
        txtNombre.setText("");
        txtNacionalidad.setText("");
        txtCantidadGoles.setText("");
        txtCantidadRojas.setText("");
        //Lo mismo pero con el color de fondo
        txtDia.setBackground(Color.WHITE);
        txtAnio.setBackground(Color.WHITE);
        txtMes.setBackground(Color.WHITE);
        txtCantidadAmarillas.setBackground(Color.WHITE);
        txtCantidadGoles.setBackground(Color.WHITE);
        txtNacionalidad.setBackground(Color.WHITE);
        txtNombre.setBackground(Color.WHITE);
        txtApellido.setBackground(Color.WHITE);
        txtCantidadRojas.setBackground(Color.WHITE);
         try (BufferedWriter writer = new BufferedWriter(new FileWriter(jugadorArchivo,true))) {
            
                writer.write( b);
                writer.newLine();
                writer.write(nombre);
                writer.newLine();
                writer.write(apellido);
                writer.newLine();
                writer.write(c);
                writer.newLine();
                writer.write(nacionalidad);
                writer.newLine();
                writer.write(a);
                writer.newLine();
                writer.write(goles);
                writer.newLine();
                writer.write(amarillas);
                writer.newLine();
                writer.write(rojas);
                writer.newLine();
            
        } catch (IOException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_botonCargarJugadorActionPerformed

    private void txtCantidadAmarillasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadAmarillasKeyTyped
        char caracter = evt.getKeyChar();
        if (!Character.isDigit(caracter) && caracter != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadAmarillasKeyTyped

    private void txtCantidadAmarillasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadAmarillasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadAmarillasActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnArbitros3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArbitros3ActionPerformed
        ActualizarTablaArbitro((ArrayList<Arbitro>) controladorArbitro.pasarListaArbitro());
        CardLayout cl = (CardLayout) jPanel5.getLayout();
        cl.show(jPanel5, "MostrarArbitro");
    }//GEN-LAST:event_btnArbitros3ActionPerformed

    private void btnJugadores1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugadores1ActionPerformed
        CardLayout cl = (CardLayout) jPanel5.getLayout();
        cl.show(jPanel5, "cargarJugador");
    }//GEN-LAST:event_btnJugadores1ActionPerformed

    private void botonSalirPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirPrincipalActionPerformed
    
        int opcion = JOptionPane.showConfirmDialog(
                null,
                "¿Estás seguro que querés salir?",
                "Confirmar salida",
                JOptionPane.YES_NO_OPTION
        );

        if (opcion == JOptionPane.YES_OPTION) {
            System.exit(0); 
        } 
    
    }//GEN-LAST:event_botonSalirPrincipalActionPerformed

    private void btnArbitrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArbitrosActionPerformed
    CardLayout cl = (CardLayout) jPanel5.getLayout();
     cl.show(jPanel5, "cargarArbitro");
    }//GEN-LAST:event_btnArbitrosActionPerformed
private List<Jugador> m;
    private void btnJugadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugadoresActionPerformed

        ActualizarTablaJugadores((ArrayList<Jugador>) controladorJugador.pasarListaJugador());
        CardLayout cl = (CardLayout) jPanel5.getLayout();
        cl.show(jPanel5, "MostrarJugadores");
    }//GEN-LAST:event_btnJugadoresActionPerformed

    private void BoxPosicionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BoxPosicionesKeyTyped
      char c= evt.getKeyChar();
    }//GEN-LAST:event_BoxPosicionesKeyTyped

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
       //Eliminacion de contenido en recuadros de texto
        txtDia.setText("");
        txtMes.setText("");
        txtAnio.setText("");
        txtApellido.setText("");
        txtNombre.setText("");
        txtNacionalidad.setText("");
        txtCantidadGoles.setText("");
        txtCantidadAmarillas.setText("");
        txtCantidadRojas.setText("");
        //Lo mismo pero con los mensajes de error
        MensajeErrorAmarillas.setText("");
        MensajeErrorApellido.setText("");
        MensajeErrorFecha.setText("");
        MensajeErrorGoles.setText("");
        MensajeErrorNacionalidad.setText("");
        MensajeErrorNombre.setText("");
        MensajeErrorRojas.setText("");
        
        //Lo mismo pero con el color de fondo
        txtDia.setBackground(Color.WHITE);
        txtAnio.setBackground(Color.WHITE);
        txtMes.setBackground(Color.WHITE);
        txtCantidadAmarillas.setBackground(Color.WHITE);
        txtCantidadGoles.setBackground(Color.WHITE);
        txtNacionalidad.setBackground(Color.WHITE);
        txtNombre.setBackground(Color.WHITE);
        txtApellido.setBackground(Color.WHITE);
        txtCantidadRojas.setBackground(Color.WHITE);
        
        //Abro la venta de precentacion    
        CardLayout cl = (CardLayout) jPanel5.getLayout();
        cl.show(jPanel5, "PanelInfo");
    }//GEN-LAST:event_botonSalirActionPerformed

    private void txtDiaAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiaAKeyTyped
        char caracter = evt.getKeyChar();
        if(!Character.isDigit(caracter) && caracter!= KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
        if(txtDiaA.getText().length()>=2 && caracter != KeyEvent.VK_BACK_SPACE){
        evt.consume();
        }
    }//GEN-LAST:event_txtDiaAKeyTyped

    private void txtMesAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMesAKeyTyped
        char caracter = evt.getKeyChar();
        if(!Character.isDigit(caracter) && caracter!= KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
        if(txtMesA.getText().length()>=2 && caracter != KeyEvent.VK_BACK_SPACE){
        evt.consume();
        }
    }//GEN-LAST:event_txtMesAKeyTyped

    private void txtAnioAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnioAKeyTyped
        char caracter = evt.getKeyChar();
        if(!Character.isDigit(caracter) && caracter!= KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
        if(txtAnioA.getText().length()>=4 && caracter != KeyEvent.VK_BACK_SPACE){
        evt.consume();
        }
    }//GEN-LAST:event_txtAnioAKeyTyped

    private void txtTarjetasTotalesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTarjetasTotalesKeyTyped
              char caracter = evt.getKeyChar();
        if(!Character.isDigit(caracter) && caracter!= KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
        
    }//GEN-LAST:event_txtTarjetasTotalesKeyTyped

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
       char caracter = evt.getKeyChar();
        if(Character.isDigit(caracter)){
        evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
             char caracter = evt.getKeyChar();
        if(Character.isDigit(caracter)){
        evt.consume();}
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void txtNacionalidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNacionalidadKeyTyped
              char caracter = evt.getKeyChar();
        if(Character.isDigit(caracter)){
        evt.consume();}
    }//GEN-LAST:event_txtNacionalidadKeyTyped

    private void txtNombre1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombre1KeyTyped
                   char caracter = evt.getKeyChar();
        if(Character.isDigit(caracter)){
        evt.consume();}
    }//GEN-LAST:event_txtNombre1KeyTyped

    private void txtApellido1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido1KeyTyped
                  char caracter = evt.getKeyChar();
        if(Character.isDigit(caracter)){
        evt.consume();}
    }//GEN-LAST:event_txtApellido1KeyTyped

    private void txtNacionalidad1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNacionalidad1KeyTyped
                    char caracter = evt.getKeyChar();
        if(Character.isDigit(caracter)){
        evt.consume();}
    }//GEN-LAST:event_txtNacionalidad1KeyTyped

    private void botonVistaEquipos2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVistaEquipos2ActionPerformed
        
    }//GEN-LAST:event_botonVistaEquipos2ActionPerformed

    private void btnMenuEliminarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuEliminarJugadorActionPerformed

        llenarTablaEliminarJugador();
        inicializarComponentes();
        CardLayout cl = (CardLayout) jPanel5.getLayout();
        cl.show(jPanel5, "eliminarJugador");
    }//GEN-LAST:event_btnMenuEliminarJugadorActionPerformed

    private void btnMenuModificarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuModificarJugadorActionPerformed
        inicializarComboEquipos(); // Llena el combo de equipos
        inicializarComboBoxNombresJugadores(); // Prepara el combo de jugadores (vacío o con un mensaje)
        //inicializacion del comboBox de posiciones aca{}
        cmBoxPosicionModifJugadores.removeAllItems();
        cmBoxPosicionModifJugadores.addItem("Arquero");
        cmBoxPosicionModifJugadores.addItem("Defensor central");
        cmBoxPosicionModifJugadores.addItem("Lateral derecho");
        cmBoxPosicionModifJugadores.addItem("Lateral izquierdo");
        cmBoxPosicionModifJugadores.addItem("Volante central");
        cmBoxPosicionModifJugadores.addItem("Volante por derecha");
        cmBoxPosicionModifJugadores.addItem("Volante por izquierda");
        cmBoxPosicionModifJugadores.addItem("Enganche");
        cmBoxPosicionModifJugadores.addItem("Delantero central");
        cmBoxPosicionModifJugadores.addItem("Segundo delantero");
        CardLayout cl = (CardLayout) jPanel5.getLayout();
        cl.show(jPanel5, "ModificarJugador");
    }//GEN-LAST:event_btnMenuModificarJugadorActionPerformed

    private void btnMenuEliminarArbitroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuEliminarArbitroActionPerformed
        llenarTablaEliminarArbitro();
        CardLayout cl = (CardLayout) jPanel5.getLayout();
        cl.show(jPanel5, "Eliminar Arbitro");
    }//GEN-LAST:event_btnMenuEliminarArbitroActionPerformed

    private void combEquiposElimJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combEquiposElimJugadorActionPerformed
        System.out.println("Entra en el boton");

        String equipoSeleccionado = (String) combEquiposElimJugador.getSelectedItem();
        int columnaEquipo = 0;
        if (equipoSeleccionado != null && !equipoSeleccionado.equals("Todos")) {
            System.out.println("no es igualalaewpieawo");
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + equipoSeleccionado, columnaEquipo));
        } else {
            //si selecciona todos o no aplica filtro no pasa nada
            sorter.setRowFilter(null);//sino se aplica ningun filtro no
        }
    }//GEN-LAST:event_combEquiposElimJugadorActionPerformed

    private void btnEliminarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarJugadorActionPerformed
        String equipoSeleccionado= (String)combEquiposElimJugador.getSelectedItem();
        int eliminarFila= tablaEliminarJugador.getSelectedRow();
        int sePuede= controladorJugador.verificarCantidadJugadores(equipoSeleccionado);

        if(sePuede==1 ){//se puede eliminar
            int opcion=JOptionPane.showConfirmDialog(this, "¿Esta seguro quequiere eliminar el jugador?", "Elija una opcion", 0);//si: 0 no:1
            if(opcion==0){//opcion si
                if(equipoSeleccionado!= null && equipoSeleccionado.equals("Todos")){//si no filtra la lista, se elimina con indice

                    controladorJugador.eliminarJugador(null, eliminarFila);
                    llenarTablaEliminarJugador();

                }
                else{//el usuario filtro la lista
                    TableModel modeloTablaFiltrada= tablaEliminarJugador.getModel();
                    Jugador eliminar= new Jugador();
                    eliminar.setClubActual((String) modeloTablaFiltrada.getValueAt(eliminarFila, 0));
                    eliminar.setNombre((String)modeloTablaFiltrada.getValueAt(eliminarFila, 1));
                    eliminar.setApellido((String)modeloTablaFiltrada.getValueAt(eliminarFila, 2));
                    eliminar.setNacimiento((String)modeloTablaFiltrada.getValueAt(eliminarFila, 3));
                    eliminar.setNacionalidad((String)modeloTablaFiltrada.getValueAt(eliminarFila, 4));
                    eliminar.setTarjetasAmarillas((String)modeloTablaFiltrada.getValueAt(eliminarFila, 5));
                    eliminar.setTarjetasRojas((String)modeloTablaFiltrada.getValueAt(eliminarFila, 6));
                    eliminar.setGoles((String)modeloTablaFiltrada.getValueAt(eliminarFila, 7));
                    controladorJugador.eliminarJugador(eliminar, 1);
                    llenarTablaFiltradaEliminarJugador(equipoSeleccionado);
                }
            }
        }else if(sePuede== -1){//no se puede eliminar
            JOptionPane.showMessageDialog(this, "No se puede eliminar el jugador.Equipo con cantidad de jugadores menor a 5"," ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarJugadorActionPerformed

    private void cmboxEquiposModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboxEquiposModificarActionPerformed
        String equipoSeleccionado = (String) cmboxEquiposModificar.getSelectedItem();

        seActualizaComboBox=true;

        if (equipoSeleccionado != null && !equipoSeleccionado.startsWith("--")) { // se asegura de que no es el mensaje inicial
            // se filtra la lista de jugadores para obtener solo los nombres de los jugadores del equipo seleccionado
            java.util.List<String>nombresJugadoresDelEquipo= new ArrayList <>(controladorJugador.getListaJugador()).stream()
            .filter(jugador -> jugador.getClubActual().equals(equipoSeleccionado))
            .map(jugador -> jugador.getNombre() + " " + jugador.getApellido()) // solo se obtienen los nombres de los jugadores
            .collect(Collectors.toList());

            //se limpia y actualiza el modelo del comboBox de nombres
            DefaultComboBoxModel<String> modeloNombresJugadores = (DefaultComboBoxModel<String>) cmBoxNombreModificarJugador.getModel();
            modeloNombresJugadores.removeAllElements();
            if (nombresJugadoresDelEquipo.isEmpty()) {
                modeloNombresJugadores.addElement("-- Sin jugadores para este equipo --");
            } else {
                for (String nombre : nombresJugadoresDelEquipo) {
                    modeloNombresJugadores.addElement(nombre);
                }
            }

            // se selecciona el primer elemento si hay elementos
            if (modeloNombresJugadores.getSize() > 0) {
                cmBoxNombreModificarJugador.setSelectedIndex(0);
            }
        } else {
            // lo que pasa si no hay equipo seleccionado
            DefaultComboBoxModel<String> modeloNombresJugadores = (DefaultComboBoxModel<String>) cmBoxNombreModificarJugador.getModel();
            modeloNombresJugadores.removeAllElements();
            modeloNombresJugadores.addElement("-- Seleccione un Equipo --");
        }

        // limpiar otros componentes que muestran info del jugador
        seActualizaComboBox=false;
        limpiarDetallesJugador();
    }//GEN-LAST:event_cmboxEquiposModificarActionPerformed

    private void cmBoxNombreModificarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmBoxNombreModificarJugadorActionPerformed
        String nombreJugadorSeleccionado = (String) cmBoxNombreModificarJugador.getSelectedItem();

        if(seActualizaComboBox){
            return;
        }

        if (nombreJugadorSeleccionado != null && !nombreJugadorSeleccionado.startsWith("--")) {
            // buscar el objeto Jugador completo por su nombre en la lista global
            ArrayList<Jugador> jugadores= new ArrayList<>(controladorJugador.pasarListaJugador());
            Jugador jugadorSeleccionado = jugadores.stream()
            .filter(jugador -> (jugador.getNombre() + " " + jugador.getApellido()).equals(nombreJugadorSeleccionado))//se filtra la lista
            .findFirst() // busca el primer jugador que coincida con el nombre
            .orElse(null); // retorna null si no lo encuentra

            if (jugadorSeleccionado != null) {
                String posicionJugador= jugadorSeleccionado.getPosicion();
                cmBoxPosicionModifJugadores.setSelectedItem(posicionJugador);
                txtApellidoModificarJugador.setText(jugadorSeleccionado.getApellido());
                txtBornModifJugador.setText(jugadorSeleccionado.getNacimiento());
                txtTarRojasModifJugador.setText(jugadorSeleccionado.getTarjetasRojas());
                spinnerTarAmarModifJugador.setValue(jugadorSeleccionado.getTarjetasAmarillas());
                spinnerGolesModifJugador.setValue(jugadorSeleccionado.getGoles());
            } else {
                limpiarDetallesJugador();
            }
        } else {
            // si se selecciona un mensaje o nada
            limpiarDetallesJugador();
        }
    }//GEN-LAST:event_cmBoxNombreModificarJugadorActionPerformed

    private void txtApellidoModificarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoModificarJugadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoModificarJugadorActionPerformed

    private void btnCargrModifJugadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargrModifJugadoresActionPerformed
        //solo cargar posicion, goles y tarjetas amarillas
        String nombreJugadorSeleccionado = (String) cmBoxNombreModificarJugador.getSelectedItem();
        if (nombreJugadorSeleccionado != null && !nombreJugadorSeleccionado.startsWith("--")) {
            String tarAmarillas= (String)spinnerTarAmarModifJugador.getValue();
            String goles= (String)spinnerGolesModifJugador.getValue();
            String posicion= (String)cmBoxPosicionModifJugadores.getSelectedItem();
            controladorJugador.modificarJugador(nombreJugadorSeleccionado, goles, tarAmarillas, posicion);
            JOptionPane.showMessageDialog(this, "Se modifico el jugador correctamente");
        }else limpiarDetallesJugador();
    }//GEN-LAST:event_btnCargrModifJugadoresActionPerformed

    private void btnEliminarArbitro2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarArbitro2ActionPerformed
        int eliminarFila= tablaEliminarArbitro1 .getSelectedRow();

        if(eliminarFila >=0){
            controladorArbitro.eliminarArbitro(null,eliminarFila);
            llenarTablaEliminarArbitro();
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione un arbitro", " ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarArbitro2ActionPerformed

    private void btnMenuModificarArbitroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuModificarArbitroActionPerformed
        try{
        llenarTablaModificarArbitro();
        CardLayout cl = (CardLayout) jPanel5.getLayout();
        cl.show(jPanel5, "ModificarArbitro");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error al preparar la sección de modificación de árbitros: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            //e.printStackTrace(); pongo stack para depuracion? 
        }
    }//GEN-LAST:event_btnMenuModificarArbitroActionPerformed

    private void botonVistaEquipos3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVistaEquipos3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVistaEquipos3ActionPerformed

    private void botonVistaEquipos4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVistaEquipos4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVistaEquipos4ActionPerformed

    private void botonVistaEquipos5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVistaEquipos5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVistaEquipos5ActionPerformed

    private void botonVistaEquipos6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVistaEquipos6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVistaEquipos6ActionPerformed
    
    //----------------------------------METODOS DE MODIFICAR ARBITRO------------------------------       
    public void llenarTablaModificarArbitro(){
         String[] columnNames = {"Nombre", "Apellido", "Nacimiento", "Nacionalidad", "Tarjetas Totales", "¿Es Internacional?"};
         DefaultTableModel modeloTabla = new DefaultTableModel(columnNames, 0) { 
             //para no poder modificar las celdas
            @Override
            public boolean isCellEditable(int row, int column) {                
                switch (column) {
                    case 4: // columna "Tarjetas Totales"
                        return true; 
                    case 5: // Columna "¿Es Internacional?" (asumiendo que es un booleano para cambiar)
                        return true; 
                    default:
                        return false; 
                }
            }
        };
         
               // --- Llenar la tabla con datos ---
        ArrayList<Arbitro> listaArbitrosActual = new ArrayList<>(controladorArbitro.pasarListaArbitro());
        for (Arbitro arb : listaArbitrosActual) {
            try {
                modeloTabla.addRow(new Object[]{
                    arb.getNombre(),
                    arb.getApellido(),
                    arb.getNacimiento(),
                    arb.getNacionalidad(),
                    arb.getTarjetasTotales(),
                    arb.getInternacional()
                });
            } catch (NullPointerException npe) {
                System.err.println("Advertencia: Un árbitro tiene datos nulos. Fila no agregada correctamente. " + npe.getMessage());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al añadir árbitro a la tabla: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
         
         
        
        //escuchador que detecta los cambios de la pinchi tabla y logica de lo que pasa cuando se modifican las filas        
           modeloTabla.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                if (e.getType() == TableModelEvent.UPDATE) {
                    int fila = e.getFirstRow();
                    int columna = e.getColumn();

                    // verifica si la fila y columna son válidas y si es una de las columnas editables
                    if (fila != TableModelEvent.HEADER_ROW && columna != TableModelEvent.ALL_COLUMNS &&
                        (columna == 4 || columna == 5)) { 

                        DefaultTableModel modeloActual = (DefaultTableModel) e.getSource(); // se crea modelo actual para evitar conflicto con modeloTabla si fuera necesario
                        try {
                            Object newValue = modeloActual.getValueAt(fila, columna);
                            System.out.println("Celda modificada en Fila: " + fila + ", Columna: " + columna + ", Nuevo Valor: " + newValue);

                            // Obtener el árbitro directamente de la lista actual del controlador
                            ArrayList<Arbitro> listaActualDelControlador = new ArrayList<>(controladorArbitro.pasarListaArbitro());
                            if (fila >= listaActualDelControlador.size() || fila < 0) {
                                throw new IndexOutOfBoundsException("Índice de fila fuera de rango en la lista del controlador.");
                            }
                            Arbitro arbitroAModificar = listaActualDelControlador.get(fila);

                            // Actualizar las propiedades del objeto Arbitro con el nuevo valor
                            switch (columna) {
                                case 4: // Tarjetas Totales (Integer)
                                    if (newValue instanceof Integer) {
                                        arbitroAModificar.setTarjetasTotales((Integer) newValue);
                                    } else if (newValue instanceof String) {
                                        // Intenta parsear si el editor permite entrada de texto
                                        arbitroAModificar.setTarjetasTotales(Integer.parseInt((String) newValue));
                                    }
                                    break;
                                case 5: // ¿Es Internacional? (Boolean)
                                    if (newValue instanceof Boolean) {
                                        arbitroAModificar.setInternacional((Boolean) newValue);
                                    } else if (newValue instanceof String) {
                                        // Si el usuario pudo escribir "true" o "false" directamente
                                        arbitroAModificar.setInternacional(Boolean.parseBoolean((String) newValue));
                                    }
                                    break;
                            }

                            controladorArbitro.actualizarArbitro(arbitroAModificar);
                            JOptionPane.showMessageDialog(null, "Árbitro actualizado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

                        } catch (IndexOutOfBoundsException ex) {
                            JOptionPane.showMessageDialog(null, "Error de índice al actualizar árbitro: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                            ex.printStackTrace();
                            // se revierten el valor en la celda si hay un problema con el índice
                            Arbitro original = controladorArbitro.getListaArbitros().get(fila);
                            if (columna == 3) modeloActual.setValueAt(original.getNacionalidad(), fila, columna);
                            if (columna == 4) modeloActual.setValueAt(original.getTarjetasTotales(), fila, columna);
                            if (columna == 5) modeloActual.setValueAt(original.getInternacional(), fila, columna);
                        } catch (NumberFormatException ex) {
                            JOptionPane.showMessageDialog(null, "Error: Ingrese un número válido para 'Tarjetas Totales'.", "Error de Formato", JOptionPane.ERROR_MESSAGE);
                            ex.printStackTrace();
                            // Revertir el valor en la celda si el formato es incorrecto
                            Arbitro original = controladorArbitro.getListaArbitros().get(fila);
                            modeloActual.setValueAt(original.getTarjetasTotales(), fila, columna);
                        } catch (ClassCastException ex) {
                            JOptionPane.showMessageDialog(null, "Error de tipo de dato al actualizar la celda. " + ex.getMessage(), "Error de Conversión", JOptionPane.ERROR_MESSAGE);
                            ex.printStackTrace();
                            // Revertir el valor en la celda si la conversión falla
                            Arbitro original = controladorArbitro.getListaArbitros().get(fila);
                            if (columna == 3) modeloActual.setValueAt(original.getNacionalidad(), fila, columna);
                            if (columna == 4) modeloActual.setValueAt(original.getTarjetasTotales(), fila, columna);
                            if (columna == 5) modeloActual.setValueAt(original.getInternacional(), fila, columna);
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(null, "Error inesperado al procesar el cambio: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                            ex.printStackTrace();
                        }
                    }
                }
            }
        });
           
          
      
    }
    


        
    

    
    
    
    //----------------------------------METODOS DE MODIFICAR ARBITRO------------------------------
    
      //--------------------------------METODOS DE MODIFICAR JUGADOR-------------------------------
       private void inicializarComboEquipos(){
        // obtener la lista de nombres de equipos únicos de la lista de jugadores
        List<String>nombresEquiposUnicos=new ArrayList<>();
        nombresEquiposUnicos.add("River Plate");
        nombresEquiposUnicos.add("Boca Juniors");
        nombresEquiposUnicos.add("Independiente");
        nombresEquiposUnicos.add("Racing Club");
        nombresEquiposUnicos.add("San Lorenzo");
        nombresEquiposUnicos.add("Velez Sarsfield");
        nombresEquiposUnicos.add("Rosario Central");
        nombresEquiposUnicos.add("Newells Old Boys");
        nombresEquiposUnicos.add("Estudiantes de La Plata");
        nombresEquiposUnicos.add("Huracan");
        modeloEquipos = new DefaultComboBoxModel<>(nombresEquiposUnicos.toArray(new String[0]));
        cmboxEquiposModificar.setModel(modeloEquipos);
        cmboxEquiposModificar.addActionListener(this::cmboxEquiposModificarActionPerformed); // listener
    }
    
     private void inicializarComboBoxNombresJugadores() {
        // inicializar el modelo para jugadores, inicialmente vacío o con un mensaje
        DefaultComboBoxModel<String> modeloNombresJugadores = new DefaultComboBoxModel<>();
        modeloNombresJugadores.addElement("-- Seleccione un Equipo --");
        cmBoxNombreModificarJugador.setModel(modeloNombresJugadores);
        cmBoxNombreModificarJugador.addActionListener(this::cmBoxNombreModificarJugadorActionPerformed); 
        //se registra el listener para actualizar otros componentes 
    }
     private void limpiarDetallesJugador() {
         txtApellidoModificarJugador.setText("");
         txtBornModifJugador.setText("");
         txtTarRojasModifJugador.setText("");
         spinnerTarAmarModifJugador.setValue(null);
         spinnerGolesModifJugador.setValue(null);
         cmBoxPosicionModifJugadores.setSelectedItem(null);
        System.out.println("Detalles de jugador limpiados.");//mensaje verificador, sacar dsps
    }
   
   //-------------------------------FIN METODOS MODIFICAR JUGADOR-------------------------------
    //----------------------------------Eliminar jugador metodos----------------------------
    public void llenarTablaEliminarJugador(){
       DefaultTableModel modeloTabla= new DefaultTableModel(new String[]{"Club", "Nombre", "Villa", "Nacimiento", "Nacionalidad", "Tarjetas Amarillas", "Tarjetas Rojas", "Goles"}, controladorJugador.getListaJugador().size());
       tablaEliminarJugador.setModel(modeloTabla);
       
       TableModel modeloDatos= tablaEliminarJugador.getModel();
       ArrayList<Jugador> listaJugadores= new ArrayList<>(controladorJugador.pasarListaJugador());
       for(int i=0; i<listaJugadores.size(); i++){
           Jugador jg= listaJugadores.get(i);
           modeloDatos.setValueAt(jg.getClubActual(), i, 0);
           modeloDatos.setValueAt(jg.getNombre(), i, 1);
           modeloDatos.setValueAt(jg.getApellido(), i, 2);
           modeloDatos.setValueAt(jg.getNacimiento(), i, 3);
           modeloDatos.setValueAt(jg.getNacionalidad(), i, 4);
           modeloDatos.setValueAt(jg.getTarjetasAmarillas(), i, 5);
           modeloDatos.setValueAt(jg.getTarjetasRojas(), i, 6);
           modeloDatos.setValueAt(jg.getGoles(), i, 7);  
       }
   }
  
   public void llenarTablaFiltradaEliminarJugador(String equipo){
       DefaultTableModel modeloTabla= new DefaultTableModel(new String[]{"Club", "Nombre", "Apellido", "Nacimiento", "Nacionalidad", "Tarjetas Amarillas", "Tarjetas Rojas", "Goles"}, controladorJugador.getListaJugador().size());
       tablaEliminarJugador.setModel(modeloTabla);

       TableModel modeloDatos= tablaEliminarJugador.getModel();
       ArrayList<Jugador> listaJugadores= new ArrayList<>(controladorJugador.pasarListaJugador());
       for(int i=0; i<listaJugadores.size(); i++){
           Jugador jg= listaJugadores.get(i);
           if(jg.getClubActual().equals(equipo)){
           modeloDatos.setValueAt(jg.getClubActual(), i, 0);
           modeloDatos.setValueAt(jg.getNombre(), i, 1);
           modeloDatos.setValueAt(jg.getApellido(), i, 2);
           modeloDatos.setValueAt(jg.getNacimiento(), i, 3);
           modeloDatos.setValueAt(jg.getNacionalidad(), i, 4);
           modeloDatos.setValueAt(jg.getTarjetasAmarillas(), i, 5);
           modeloDatos.setValueAt(jg.getTarjetasRojas(), i, 6);
           modeloDatos.setValueAt(jg.getGoles(), i, 7);
           }
           
       }
   }
   
       public void inicializarComponentes(){
       llenarTablaEliminarJugador();
       DefaultTableModel model= (DefaultTableModel)tablaEliminarJugador.getModel();
       
       //inicializa el sorter
       sorter = new TableRowSorter<>(model);
       tablaEliminarJugador.setRowSorter(sorter);
       
       //Action listener del combo box, se activa cuando se selecciona un elemento
       combEquiposElimJugador.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                combEquiposElimJugadorActionPerformed(evt);
            }
        });
   }
   
   //---------------------------------FIN ELIMINAR JUGADOR METODOS----------------------------------------
    
   //----------------------------------METODOS DE ELIMINAR ARBITRO----------------------------------------
     public void llenarTablaEliminarArbitro(){
        DefaultTableModel modeloTabla= new DefaultTableModel(new String[]{"Nombre", "Apellido", "Nacimiento", "Nacionalidad", "Tarjetas totales", "¿Es internacional?"}, controladorArbitro.getListaArbitros().size());
        tablaEliminarArbitro1.setModel(modeloTabla);
        
        TableModel modeloDatos= tablaEliminarArbitro1.getModel();
        ArrayList<Arbitro> listaArbitros= new ArrayList<>(controladorArbitro.pasarListaArbitro());
        for (int i=0; i<controladorArbitro.getListaArbitros().size();i++){
            Arbitro ar= listaArbitros.get(i);
            modeloDatos.setValueAt(ar.getNombre(), i, 0);
            modeloDatos.setValueAt(ar.getApellido(), i, 1);
            modeloDatos.setValueAt(ar.getNacimiento(), i, 2);
            modeloDatos.setValueAt(ar.getNacionalidad(), i, 3);
            modeloDatos.setValueAt(ar.getTarjetasTotales(), i, 4);
            modeloDatos.setValueAt(ar.getInternacional(), i, 5);
        }
    }
   
  //----------------------------------FIN METODOS DE ELIMINAR ARBITRO-------------------------------------


//funcion tabla jugadores 
   public void ActualizarTablaJugadores(ArrayList<Jugador> Lista){
        DefaultTableModel modelo = (DefaultTableModel) tablaJugadores.getModel();
        // vacias la tabla
        modelo.setRowCount(0);
        
        // a lo largo de toda la lista, voy agregando filas
        
        for (Jugador est : Lista) {
            // creo fila
            Object [] fila = new Object[modelo.getColumnCount()];
            fila[0] = est.getNombre();
            fila[1] = est.getApellido();
            fila[2]= est.getNacimiento();
            fila[3]=est.getNacionalidad();
            fila[4]=est.getClubActual();
            fila[5]=est.getPosicion();
            fila[6]=est.getGoles();
            fila[7]=est.getTarjetasAmarillas();
            fila[8]=est.getTarjetasRojas();
            //completo la fila ...
            modelo.addRow(fila);
        }
    }
   //funcion tabla Arbitro
     public void ActualizarTablaArbitro(ArrayList<Arbitro> Lista){
        DefaultTableModel modelo = (DefaultTableModel) tablaArbitros.getModel();
        // vacias la tabla
        modelo.setRowCount(0);
        
        // a lo largo de toda la lista, voy agregando filas
        String a="Si";
        String b="No";
        for (Arbitro est : Lista) {
            // creo fila
            Object [] fila = new Object[modelo.getColumnCount()];
            fila[0] = est.getNombre();
            fila[1] = est.getApellido();
            fila[2]= est.getNacimiento();
            fila[3]=est.getNacionalidad();
            fila[4]=est.getTarjetasTotales();
            if(est.getInternacional()== true){
            fila[5]=a;
            }else{
            fila[5]=b;
            }
            //completo la fila ...
            modelo.addRow(fila);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
     
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
        
        
    }
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    public javax.swing.JComboBox<String> BoxEquipo;
    public javax.swing.JComboBox<String> BoxInternacional;
    public javax.swing.JComboBox<String> BoxPosiciones;
    private javax.swing.JPanel EliminarArbitro;
    private javax.swing.JPanel EliminarJugador;
    public javax.swing.JLabel MensajeErrorAmarillas;
    public javax.swing.JLabel MensajeErrorApellido;
    public javax.swing.JLabel MensajeErrorApellidoA;
    public javax.swing.JLabel MensajeErrorFecha;
    public javax.swing.JLabel MensajeErrorFechaA;
    public javax.swing.JLabel MensajeErrorGoles;
    public javax.swing.JLabel MensajeErrorNacionalidad;
    public javax.swing.JLabel MensajeErrorNacionalidadA;
    public javax.swing.JLabel MensajeErrorNombre;
    public javax.swing.JLabel MensajeErrorNombreA;
    public javax.swing.JLabel MensajeErrorRojas;
    public javax.swing.JLabel MensajeErrorTarTotales;
    private javax.swing.JPanel ModificarArbitro;
    private javax.swing.JPanel ModificarJugador;
    private javax.swing.JPanel MostrarArbitro;
    private javax.swing.JPanel MostrarJugadores;
    private javax.swing.JPanel PanelInformacion;
    private javax.swing.JPanel PanelIngreso;
    private javax.swing.JPanel background;
    private javax.swing.JButton botonCargarArbitro;
    private javax.swing.JButton botonCargarJugador;
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton botonSalirPrincipal;
    private javax.swing.JButton botonVistaEquipos1;
    private javax.swing.JButton botonVistaEquipos2;
    private javax.swing.JButton botonVistaEquipos3;
    private javax.swing.JButton botonVistaEquipos4;
    private javax.swing.JButton botonVistaEquipos5;
    private javax.swing.JButton botonVistaEquipos6;
    private javax.swing.JButton btnArbitros;
    private javax.swing.JButton btnArbitros1;
    private javax.swing.JButton btnArbitros2;
    private javax.swing.JButton btnArbitros3;
    private javax.swing.JButton btnCargrModifJugadores;
    private javax.swing.JButton btnEliminarArbitro2;
    private javax.swing.JButton btnEliminarJugador;
    private javax.swing.JButton btnJugadores;
    private javax.swing.JButton btnJugadores1;
    private javax.swing.JButton btnJugadores2;
    private javax.swing.JButton btnJugadores3;
    private javax.swing.JButton btnMenuEliminarArbitro;
    private javax.swing.JButton btnMenuEliminarJugador;
    private javax.swing.JButton btnMenuModificarArbitro;
    private javax.swing.JButton btnMenuModificarJugador;
    private javax.swing.JButton btnSalir;
    private javax.swing.JPanel canJugadoresPEquipo;
    private java.awt.Canvas canvas1;
    private javax.swing.JComboBox<String> cmBoxNombreModificarJugador;
    private javax.swing.JComboBox<String> cmBoxPosicionModifJugadores;
    private javax.swing.JComboBox<String> cmboxEquiposModificar;
    private javax.swing.JComboBox<String> combEquiposElimJugador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JPanel panelIngresoArbitro;
    private javax.swing.JPanel panelIngresoJugador;
    private javax.swing.JPanel panelMenu;
    private javax.swing.JPanel panelMenu1;
    private javax.swing.JSpinner spinnerGolesModifJugador;
    private javax.swing.JSpinner spinnerTarAmarModifJugador;
    private javax.swing.JTable tablaArbitros;
    private javax.swing.JTable tablaEliminarArbitro;
    private javax.swing.JTable tablaEliminarArbitro1;
    private javax.swing.JTable tablaEliminarJugador;
    private javax.swing.JTable tablaJugadores;
    public javax.swing.JTextField txtAnio;
    public javax.swing.JTextField txtAnioA;
    public javax.swing.JTextField txtApellido;
    public javax.swing.JTextField txtApellido1;
    private javax.swing.JTextField txtApellidoModificarJugador;
    private javax.swing.JTextField txtBornModifJugador;
    public javax.swing.JTextField txtCantidadAmarillas;
    public javax.swing.JTextField txtCantidadGoles;
    public javax.swing.JTextField txtCantidadRojas;
    public javax.swing.JTextField txtDia;
    public javax.swing.JTextField txtDiaA;
    public javax.swing.JTextField txtMes;
    public javax.swing.JTextField txtMesA;
    public javax.swing.JTextField txtNacionalidad;
    public javax.swing.JTextField txtNacionalidad1;
    public javax.swing.JTextField txtNombre;
    public javax.swing.JTextField txtNombre1;
    private javax.swing.JTextField txtTarRojasModifJugador;
    public javax.swing.JTextField txtTarjetasTotales;
    // End of variables declaration//GEN-END:variables
}
